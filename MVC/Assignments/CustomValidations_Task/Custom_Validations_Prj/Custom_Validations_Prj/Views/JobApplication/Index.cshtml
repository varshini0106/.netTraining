﻿@model Custom_Validations_Prj.Models.JobApplication
@{
    ViewBag.Title = "Index";
}

<h2 style="color:blue;text-align:center;">Job Application Form</h2>
<br />
<h3>Status of Your Application : @ViewBag.Result</h3>
<br />
<div>
    @using (Html.BeginForm())
    {
    <table>
        <tr>
            <td>
                @Html.LabelFor(model => model.name)
                @Html.EditorFor(model => model.name)
                @Html.ValidationMessageFor(model => model.name)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.experience)
                @Html.EditorFor(model => model.experience)
                @Html.ValidationMessageFor(model => model.experience)

            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.birthdate)
                @Html.EditorFor(model => model.birthdate)
                @Html.ValidationMessageFor(model => model.birthdate)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.email)
                @Html.EditorFor(model => model.email)
                @Html.ValidationMessageFor(model => model.email)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.password)
                @Html.EditorFor(model => model.password)
                @Html.ValidationMessageFor(model => model.password, "", new { style = "color:red;" })
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.Gender)
                @Html.DropDownListFor(model => model.Gender,
               new List<SelectListItem>
               {
                   new SelectListItem{Text="Select Gender", Value="select"},
                   new SelectListItem{Text="Male", Value="M"},
                   new SelectListItem{Text="Female", Value="F"}})
                @Html.ValidationMessageFor(model => model.Gender)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.expsal)
                @Html.EditorFor(model => model.expsal)
                @Html.ValidationMessageFor(model => model.expsal)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.Skills)
                @Html.CheckBoxFor(model => model.Skills[0].IsChecked, new { id = "csharp" }) CSharp
                @Html.CheckBoxFor(model => model.Skills[1].IsChecked, new { id = "sql" }) MS SQL
                @Html.CheckBoxFor(model => model.Skills[2].IsChecked, new { id = "ado" }) ADO.Net
                @Html.CheckBoxFor(model => model.Skills[3].IsChecked, new { id = "web" }) Web Technologies
                @Html.CheckBoxFor(model => model.Skills[4].IsChecked, new { id = "mvc" }) MVC
                @Html.ValidationMessageFor(model => model.Skills)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.HavePassport)
                @Html.RadioButtonFor(model => model.HavePassport, "True") Yes I Have
                @Html.RadioButtonFor(model => model.HavePassport, "False") No, I Dont
                @Html.ValidationMessageFor(model => model.HavePassport)
            </td>
        </tr>
        <tr>
            <td>
                @Html.LabelFor(model => model.doj)
                @Html.EditorFor(model => model.doj)
                @Html.ValidationMessageFor(model => model.doj, "", new { style = "color:red;" })
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <button type="submit">Submit</button>
            </td>
        </tr>
    </table>
    }
</div>